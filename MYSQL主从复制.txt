MYSQL 主从复制

	主从复制的原理：
		1>. Master 将数据改变记录到二进制日志（binary log）中，也就是配置文件log-bin指定的文件，这些记录叫做二级制日志事件（binary log events）.
		2>. Slave 通过 I/O 线程读取 Master 中的 binary log events 写入到他的中继日志（relay log）中.
		3>. Slave 重做中继日志中的事件，把中继日志中的事件信息一条一条的在本地执行一次，完成数据在本地的存储，从而实现数据库的 master-slave 节点数据一致的问题，即MYSQL 的主从复制.
		
	主从复制操作流程
		实验环境：
			MYSQL-master：192.168.3.11
			MYSQL-slave1：192.168.3.12
			MYSQL-slave2：192.168.3.13
			
		实验之前请确保：
			1>. 关闭 Selinux
			2>. 同步时间服务器：
			3>. 关闭iptables 相关规则或者允许相关规则.
				 # vim /etc/sysconfig/iptables
					-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT
	
	1. 开启二进制日志
		# vim /usr/local/mysql/etc/my.cnf
			[client]
			user=root
			password=mysql_master

			[mysqld]
			server-id = 11
			log-slave-updates=true 
			log-bin=master-bin
		# mysql
		> show variables like 'log_bin';
		> show master status;
			+-------------------+----------+--------------+------------------+-------------------+
			| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
			+-------------------+----------+--------------+------------------+-------------------+
			| master-bin.000002 |      920 |              |                  |                   |
			+-------------------+----------+--------------+------------------+-------------------+
		
	2. 登录主服务器，授权给对应从服务器相关权限
		# mysql
		> grant replication slave on *.* to 'root'@'172.23.43.2' identified by 'yLk5Sx7DuxtlNf9R';
		> flush privileges;
		
	3. 从节点修改配置文件my.cnf, 添加如下内容
		# vim /usr/local/mysql/etc/my.cnf
			server-id = 22              
			log-bin=mysql-bin        
			relay-log=relay-log-bin
			relay-log-index=slave-relay-bin.index  
			
		登录从节点服务器，配置同步
		# mysql
		> change master to master_host='192.168.3.11',master_user='root',master_password='mysql_master',master_log_file='master-bin.000003',master_log_pos=777;
		> start slave;
		> show slave status\G;		//注意这里 Slave_IO_Running、Slave_SQL_Running 参数均为 Yes 才Ok！
			*************************** 1. row ***************************
						   Slave_IO_State: Waiting for master to send event
							  Master_Host: 192.168.3.192
							  Master_User: root
							  Master_Port: 3306
							Connect_Retry: 60
						  Master_Log_File: master-bin.000002
					  Read_Master_Log_Pos: 920
						   Relay_Log_File: relay-log-bin.000002
							Relay_Log_Pos: 486
					Relay_Master_Log_File: master-bin.000002
						 Slave_IO_Running: Yes
						Slave_SQL_Running: Yes
						
	4. 在主服务器上创建数据库进行验证
		# mysql
		> create database Python;
		
		从服务器器登录数据库；
		> show databases;		//此时myql 主从同步已完成
			Python
			
MYSQl 主从复制常见问题汇总：
	1>. Slave_IO_Running No
	2>. Slave_SQL_Running No
	3>. 主从复制性能问题
			
	
		

	